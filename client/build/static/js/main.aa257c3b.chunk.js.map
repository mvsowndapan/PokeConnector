{"version":3,"sources":["img/pokeball.png","img/spinner.gif","validation/isEmpty.js","actions/types.js","reducers/authReducer.js","reducers/errReducer.js","reducers/profileReducer.js","reducers/postReducer.js","reducers/index.js","store.js","utils/setAuthToken.js","actions/authActions.js","actions/profileActions.js","component/layout/Navbar.jsx","component/layout/Footer.jsx","component/layout/Landing.jsx","component/common/Textfield.jsx","component/auth/Login.jsx","component/auth/Register.jsx","component/common/Spinner.jsx","component/dashboard/Profile.jsx","component/dashboard/Exp.jsx","component/dashboard/Edu.jsx","component/dashboard/Dashboard.jsx","component/common/Private.jsx","component/common/Textarea.jsx","component/common/Inputgroup.jsx","component/common/SelectList.jsx","component/create-profile/CreateProfile.jsx","component/edit-profile/EditProfile.jsx","component/add-exp-edu/Experience.jsx","component/add-exp-edu/Education.jsx","component/profiles/ProfileItem.jsx","component/profiles/Profile.jsx","component/profile/ProfileAbout.jsx","component/profile/ProfileCreds.jsx","component/profile/ProfileHeader.jsx","component/profile/ProfileInfo.jsx","component/profile/Profile.jsx","component/not-found/NotFound.jsx","actions/postActions.js","component/posts/PostForm.jsx","component/posts/PostItem.jsx","component/posts/AllPosts.jsx","component/posts/Posts.jsx","component/post/CommentForm.jsx","component/post/CommentItem.jsx","component/post/CommentFeed.jsx","component/post/Post.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","isEmpty","value","undefined","Object","keys","length","trim","GET_ERRORS","initialState","isAuthenticated","user","profile","profiles","loading","post","posts","combineReducers","auth","state","arguments","action","type","objectSpread","payload","err","concat","toConsumableArray","filter","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","getCurrentProfile","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","wrap","_context2","prev","next","setProfileLoading","get","sent","data","t0","stop","_x2","this","createProfile","profileData","history","_ref4","_callee4","_context4","push","response","_x4","clearCurrentProfile","Navbar","onLogoutClick","e","preventDefault","_this","props","_this$props$auth","userLink","react_default","createElement","className","react_router_dom","to","href","onClick","src","avatar","style","width","marginRight","alt","name","guestLink","pokeball","height","data-toggle","data-target","id","Component","protoTypes","PropTypes","func","isRequired","object","connect","Footer","Date","getFullYear","Landing","Textfield","_ref","placeholder","onChange","label","info","disabled","classnames","is-invalid","string","defaultProps","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","onSubmit","_this$state","email","password","loginUser","nextProps","console","log","noValidate","common_Textfield","userData","setItem","jwt_decode","Register","confrim","registerUser","userDate","_callee","_context","_x","withRouter","Spinner","SpinnerGif","margin","display","Profile","role","Exp","deleteExperience","experience","exp","map","key","title","dist_default","format","from","deleteExp","bind","_ref6","_callee6","_context6","delete","_x6","Edu","deleteEducation","education","edu","school","degree","specialist","deleteEdu","_ref8","_callee8","_context8","_x8","Dashboard","onDeleteClick","deleteAccount","dashboardContent","_this$props$profile","handle","dashboard_Profile","dashboard_Exp","dashboard_Edu","_ref9","_callee9","_context9","confirm","_x9","component","rest","objectWithoutProperties","react_router","assign","render","TextArea","Inputgroup","icon","SelectList","choice","options","op","array","CreateProfile","town","lab","location","status","skill","bio","github","youtube","twitter","facebook","instagram","linkedin","displaySocialInputs","nextStep","socialInputs","_this2","_this$state2","common_Inputgroup","common_SelectList","Textarea","prevState","EditProfile","skillCsv","join","social","Experience","description","current","addExperience","onCheck","checked","htmlFor","expData","_ref5","_callee5","_context5","_x5","Education","addEducation","eduData","_ref7","_callee7","_context7","_x7","ProfileItem","slice","s","index","getProfiles","profileItems","profiles_ProfileItem","ProfileAbout","firstName","split","skills","ProfileCredits","_this$props","ProfileHeader","ProfileInfo","clientId","clientSecret","count","sort","repos","username","fetch","then","res","json","refs","myref","catch","repoItem","r","html_url","stargazers_count","ref","match","params","getProfileByHandle","profileContent","profile_ProfileHeader","profile_ProfileAbout","ProfileCreds","profile_ProfileInfo","_ref3","_callee3","_context3","_x3","NotFound","getPosts","newPost","setPostLoading","clearErrors","PostForm","text","_this$props$auth$user","addPost","postData","PostItem","checkLikes","likes","l","deletePost","like","unlike","showActions","likePost","text-success","unlikePost","DeleteClick","deleteId","AllPosts","posts_PostItem","Posts","postContent","_this$props$post","posts_AllPosts","posts_PostForm","CommentForm","postId","addComment","commentData","newComment","CommentItem","commentId","deleteComment","comment","CommentFeed","comments","c","post_CommentItem","Post","getPost","post_CommentForm","post_CommentFeed","jwtToken","currentTime","now","App","es","layout_Navbar","exact","path","Profiles","common_Private","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa257c3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.438eaac6.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.01a254ff.gif\";","const isEmpty = value =>\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;","//error\nexport const GET_ERRORS = 'GET_ERRORS';\n//user\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n//profle\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const PROFILE_LOADING = 'PROFILE_LOADING';\nexport const PROFILE_NOT_FOUND = 'PROFILE_NOT_FOUND';\nexport const CLEAR_CURRENT_PROFILE = 'CLEAR_CURRENT_PROFILE.';\nexport const GET_STATE = 'GET_STATE';\n//post\nexport const POST_LOADING = 'POST_LOADING';\nexport const GET_POST = 'GET_POST';\nexport const GET_POSTS = 'GET_POSTS';\nexport const ADD_POST = 'ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\n//comment\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","// This file actually does all the changes into the state and store it in the store\n//isempty validation is used to check the token is empty\nimport isEmpty from '../validation/isEmpty';\n//types\nimport { SET_CURRENT_USER } from '../actions/types';\n//Auth reducer initial state\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\n//exporting reducers cases\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        default: return state;\n    }\n}  ","// This file actually does all the changes into the state and store it in the store\n\n//types\nimport { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n//Auth reducer initial state\nconst initialState = {};\n\n//exporting reducers cases\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS: return action.payload;\n        case CLEAR_ERRORS: return {};\n        default: return state;\n    }\n} ","//types\nimport { GET_PROFILE, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_PROFILES } from '../actions/types';\n\nconst initialState = {\n    profile: null,\n    profiles: null,\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case PROFILE_LOADING: return { ...state, loading: true }\n        case GET_PROFILE: return { ...state, profile: action.payload, loading: false }\n        case CLEAR_CURRENT_PROFILE: return { ...state, profile: null }\n        case GET_PROFILES: return { ...state, profiles: action.payload, loading: false }\n        default: return state;\n    }\n}","//types\nimport { ADD_POST, POST_LOADING, GET_POSTS, DELETE_POST, GET_POST } from '../actions/types';\nconst initialState = {\n    post: {},\n    posts: [],\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_POST: return { ...state, posts: [action.payload, ...state.posts] }\n        case POST_LOADING: return { ...state, loading: true }\n        case GET_POSTS: return { ...state, posts: action.payload, loading: false }\n        case DELETE_POST: return { ...state, posts: state.posts.filter(post => post._id !== action.payload) }\n        case GET_POST: return { ...state, post: action.payload, loading: false }\n        default: return state;\n    }\n};\n","import { combineReducers } from 'redux';\n// reducers\nimport auth from './authReducer';\nimport err from './errReducer';\nimport profile from './profileReducer';\nimport post from './postReducer';\n\nexport default combineReducers({\n    auth: auth,\n    err: err,\n    profile: profile,\n    post: post\n});","//redux-store\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n//reducers\nimport rootReducer from './reducers';\n\n//state \nconst intialState = {};\n//store\nconst middleware = [thunk];\n// syntax :: createStore(reducer, initialState, middleware)\nconst store = createStore(rootReducer, intialState,\n    compose(applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\n\nexport default store;","import axios from 'axios';\n//set Auth token\nexport const setAuthToken = token => {\n    if (token) axios.defaults.headers.common['Authorization'] = token;\n    else delete axios.defaults.headers.common['Authorization'];\n};\nexport default setAuthToken;\n\n","// This file contain all the ajax calls and dispatch the reponse how ever we like !!!\n// u need type file for representing which case u are going to call\nimport axios from 'axios';\n//types\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n//utils (set the token to avery private request)\nimport { setAuthToken } from '../utils/setAuthToken';\n//jwt-decode (token contain all the  user info  to decode that we need)\nimport jwt_decode from 'jwt-decode';\n\n//Register\nexport const registerUser = (userDate, history) => async dispatch => {\n    try {\n        await axios.post('/user/register', userDate);\n        history.push('/login');\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }) }\n};\n\n//Login\nexport const loginUser = (userData) => async dispatch => {\n    try {\n        let user = await axios.post('/user/login', userData);\n        const { token } = user.data;\n        localStorage.setItem('jwtToken', token); //save token to local storage\n        setAuthToken(token); //set token to auth header\n        let decoded = jwt_decode(token); //decoding token to get the user data\n        dispatch(setCurrentUser(decoded));// dispatch the login form \n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }) }\n}\n//setting current user to the state\nexport const setCurrentUser = (decoded) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }; \n}\n//logout the user and delete the token\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem('jwtToken');//remove token from localstorage\n    setAuthToken(false); //remove auth token\n    dispatch(setCurrentUser({})); //set user state to {} and to change isAuthenticated to false\n}\n","import axios from 'axios';\n//types\nimport { GET_PROFILE, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_ERRORS, SET_CURRENT_USER, GET_PROFILES } from './types';\n\n\n//Get all the profile\nexport const getProfiles = () => async dispatch => {\n    try {\n        dispatch(setProfileLoading());\n        let profiles = await axios.get('/profile/all');\n        // console.log(profiles.data);\n        dispatch({ type: GET_PROFILES, payload: profiles.data });\n    }\n    catch (err) { dispatch({ type: GET_PROFILES, payload: null }); }\n\n}\n//Getting current profile\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        dispatch(setProfileLoading());\n        let profile = await axios.get('/profile');\n        dispatch({ type: GET_PROFILE, payload: profile.data });\n    }\n    catch (err) { dispatch({ type: GET_PROFILE, payload: {} }) }\n};\n\n//Get Profile by Handle\nexport const getProfileByHandle = (handle) => async dispatch => {\n    try {\n        dispatch(setProfileLoading());\n        let profile = await axios.get(`/profile/handle/${handle}`);\n        dispatch({ type: GET_PROFILE, payload: profile.data });\n    }\n    catch (err) { dispatch({ type: GET_PROFILE, payload: null }) }\n}\n//create Profile\nexport const createProfile = (profileData, history) => async dispatch => {\n    try {\n        await axios.post('/profile', profileData);\n        history.push('/dashboard');\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }) }\n};\n//Profile loading\nexport const setProfileLoading = () => {\n    return {\n        type: PROFILE_LOADING\n    }\n}\n//Clear current Profile\nexport const clearCurrentProfile = () => {\n    return {\n        type: CLEAR_CURRENT_PROFILE\n    }\n}\n//add-Experience\nexport const addExperience = (expData, history) => async dispatch => {\n    try {\n        await axios.post('/profile/experience', expData);\n        history.push('/dashboard');\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }) }\n}\n//deleteExperience\nexport const deleteExperience = (id) => async dispatch => {\n    try {\n        let exp = await axios.delete(`/profile/experience/${id}`);\n        dispatch({ type: GET_PROFILE, payload: exp.data });\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }) }\n}\n//education\nexport const addEducation = (eduData, history) => async dispatch => {\n    try {\n        await axios.post('/profile/education', eduData);\n        history.push('/dashboard');\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }) }\n}\n//deleteEducation\nexport const deleteEducation = (id) => async dispatch => {\n    try {\n        let edu = await axios.delete(`/profile/education/${id}`);\n        dispatch({ type: GET_PROFILE, payload: edu.data });\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }) }\n}\n//deleteAccount\nexport const deleteAccount = () => async dispatch => {\n    try {\n        if (window.confirm(\"Are You Sure ?, You can't undo this\")) {\n            await axios.delete('/profile');\n            dispatch({ type: SET_CURRENT_USER, payload: {} });\n        }\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }); }\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//action\nimport { logoutUser } from '../../actions/authActions';\nimport { clearCurrentProfile } from '../../actions/profileActions';\n//images\nimport pokeball from '../../img/pokeball.png';\n\nclass Navbar extends Component {\n    onLogoutClick = (e) => {\n        e.preventDefault();\n        this.props.clearCurrentProfile();\n        this.props.logoutUser();\n        // window.location.href = '/'; // redirect him to the login page\n    };\n    render() {\n        const { isAuthenticated, user } = this.props.auth;\n        let userLink = (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item \">\n                    <Link className=\"nav-link \" to=\"/dashboard\">Dashboard</Link>\n                </li>\n                <li className=\"nav-item \">\n                    <Link className=\"nav-link \" to=\"/team\">Your Team</Link>\n                </li>\n                <li className=\"nav-item \">\n                    <Link className=\"nav-link \" to=\"/post\">Posts</Link>\n                </li>\n                <a href=\"/logout\" onClick={this.onLogoutClick} className=\"nav-link\" >\n                    <img src={user.avatar} className='rounded-circle' style={{ width: '25px', marginRight: '10px' }} alt={user.name}></img>\n                    Logout\n                </a>\n            </ul>\n        );\n        let guestLink = (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item \">\n                    <Link className=\"nav-link \" to=\"/register\">Register</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                </li>\n            </ul>\n        );\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n                    <div className=\"container\">\n                        <Link className=\"navbar-brand\" to=\"/\">\n                            <img src={pokeball} width=\"25\" height=\"30\" alt=\"\"></img>\n                        </Link>\n                        <Link className=\"navbar-brand\" to=\"/\">PokeConnecter</Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/trainers\"> Trainers</Link>\n                                </li>\n                            </ul>\n                            {isAuthenticated ? userLink : guestLink}\n                        </div>\n                    </div>\n                </nav>\n\n            </div>\n        )\n    }\n}\n\nNavbar.protoTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser, clearCurrentProfile })(Navbar);","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div>\n            <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\n                Copyright &copy; {new Date().getFullYear()} Developed By M V Sowndapan\n            </footer>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nclass Landing extends Component {\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) this.props.history.push('/dashboard');\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"landing\">\n                    <div className=\"dark-overlay landing-inner text-light\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 text-center\">\n                                    <h1 className=\"display-5 mb-4\">PokeConnecter</h1>\n                                    <p className=\"lead\"> Create a Trainer profile/portfolio, share posts and get knowledge from other trainers</p>\n                                    <hr />\n                                    <Link to=\"/register\" className=\"btn btn-lg btn-dark mr-2\">Register</Link>\n                                    <Link to=\"/login\" className=\"btn btn-lg btn-light\">Login</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nLanding.propTypes = {\n    auth: PropTypes.object.isRequired\n};\nconst mapStoreToProps = (state) => ({\n    auth: state.auth\n})\nexport default connect(mapStoreToProps)(Landing);","import React from 'react'\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Textfield = ({ name, placeholder, value, label, onChange, err, info, type, disabled }) => {\n    return (\n        <div>\n            <div className=\"form-group\">\n                <input\n                    type={type}\n                    className={classnames(\"form-control form-control-lg\",\n                        { 'is-invalid': err })}\n                    placeholder={placeholder}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                    disabled={disabled}\n                />\n                {info && (<small className=\"form-text text-muted\">{info}</small>)}\n                {err && (<div className=\"invalid-feedback\">{err}</div>)}\n            </div>\n        </div>\n    )\n}\n\nTextfield.protoTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    err: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.string\n};\nTextfield.defaultProps = {\n    type: 'text'\n}\nexport default Textfield;","import React, { Component } from 'react'\n//connecting the component into the redux\nimport { connect } from 'react-redux';\n//to use the loginUser function from actions/authActions import it\nimport { loginUser } from '../../actions/authActions';\n//All the actions data are to included into the props so that we can use in another function this data as well,\n// and we need to ass all the property of the component into the proptypes\nimport PropTypes from 'prop-types';\n//textfield common template\nimport Textfield from '../common/Textfield';\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      err: {}\n    };\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) this.props.history.push('/dashboard');\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) this.props.history.push('/dashboard');\n    if (nextProps.err) this.setState({ err: nextProps.err });\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    let { email, password } = this.state;\n    this.props.loginUser({ email, password });\n  }\n\n  render() {\n    let { err } = this.state;\n    console.log(err);\n    return (\n      <div>\n        <div className=\"login\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h1 className=\"display-6 text-center\">Log In</h1>\n                <p className=\"lead text-center\">Sign in to your PokeConnector account</p>\n                <form noValidate onSubmit={this.onSubmit}>\n                  <Textfield\n                    type='email'\n                    name='email'\n                    placeholder='Email Address'\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    err={err.email}\n                  />\n                  <Textfield\n                    type='password'\n                    name='password'\n                    placeholder='Password'\n                    value={this.state.password}\n                    onChange={this.onChange}\n                    err={err.password}\n                  />\n                  <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" value=\"Login\" />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div >\n    )\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  err: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  err: state.err\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React, { Component } from 'react';\n//connecting the component into the redux\nimport { connect } from 'react-redux';\n//to use the registerUser function from actions/authActions import it\nimport { registerUser } from '../../actions/authActions';\n//All the actions data are to included into the props so that we can use in another function this data as well,\n// and we need to ass all the property of the component into the proptypes\nimport PropTypes from 'prop-types';\n//to redirect from one page to another we need \nimport { withRouter } from 'react-router-dom';\n//textfield\nimport Textfield from '../common/Textfield';\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            confrim: '',\n            err: {}\n        };\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) this.props.history.push('/dashboard');\n    }\n    //add errors to props when somwthing occur\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.err) this.setState({ err: nextProps.err });\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        let { name, email, password, confrim } = this.state;\n        this.props.registerUser({ name, email, password, confrim }, this.props.history);\n    }\n    render() {\n        const { err } = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-6 text-center text-dark\">Register</h1>\n                            <p className=\"lead text-center\">\n                                Create your PokeConnector account</p>\n                            <form noValidate onSubmit={this.onSubmit}>\n                                <Textfield\n                                    type='name'\n                                    name='name'\n                                    placeholder='name'\n                                    value={this.state.name}\n                                    onChange={this.onChange}\n                                    err={err.name}\n                                />\n                                <Textfield\n                                    type='email'\n                                    name='email'\n                                    placeholder='Email Address'\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                    err={err.email}\n                                    info=\"This site uses Gravater Email.\"\n                                />\n                                <Textfield\n                                    type='password'\n                                    name='password'\n                                    placeholder='Password'\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                    err={err.password}\n                                />\n                                <Textfield\n                                    type='password'\n                                    name='confrim'\n                                    placeholder='confrim'\n                                    value={this.state.confrim}\n                                    onChange={this.onChange}\n                                    err={err.confrim}\n                                />\n                                <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// adding all properties to prop\nRegister.protoTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    err: PropTypes.object.isRequired\n}\n// mapping data into the props\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    err: state.err\n})\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));","import React from 'react'\n//gif\nimport SpinnerGif from '../../img/spinner.gif';\n\nexport default function Spinner() {\n  return (\n    <div>\n      <img src={SpinnerGif}\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n        alt=\"Loading...\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Profile = () => {\n    return (\n        <div className=\"btn-group mb-4\" role=\"group\">\n            <Link to=\"/edit-profile\" className=\"btn btn-light\">\n                <i className=\"fas fa-user-circle text-danger mr-1\"></i> Edit Profile</Link>\n            <Link to=\"/add-experience\" className=\"btn btn-light\">\n                <i className=\"fab fa-black-tie text-success mr-1\"></i>\n                Add Experience</Link>\n            <Link to=\"/add-education\" className=\"btn btn-light\">\n                <i className=\"fas fa-graduation-cap text-warning mr-1\"></i>\n                Add Education</Link>\n        </div>\n    )\n}\nexport default Profile;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n//format date\nimport Moment from 'react-moment';\n//action\nimport { deleteExperience } from '../../actions/profileActions';\n\nclass Exp extends Component {\n    deleteExp(id) {\n        this.props.deleteExperience(id);\n    }\n    render() {\n        const experience = this.props.exp.map(e => (\n            <tr key={e._id}>\n                <td>{e.title}</td>\n                <td><Moment format=\"YYYY/MM/DD\">{e.from}</Moment> -\n                {e.to === null ? (' Now') : (<Moment format=\"YYYY/MM/DD\">{e.to}</Moment>)}\n                </td>\n                <td><button onClick={this.deleteExp.bind(this, e._id)} className=\"btn btn-outline-danger\">Delete</button> </td>\n            </tr>\n        ));\n        return (\n            <div className=\"Exp\">\n                <h4 className=\"mb-4\">Experience</h4>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <td><b>Title</b></td>\n                            <td><b>Years</b></td>\n                            <td><b>Option</b></td>\n                        </tr>\n                        {experience}\n                    </thead>\n                </table>\n            </div>\n        )\n    }\n}\n\nExp.propTypes = {\n    deleteExperience: PropTypes.func.isRequired\n}\nexport default connect(null, { deleteExperience })(Exp);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n//format date\nimport Moment from 'react-moment';\n//action\nimport { deleteEducation } from '../../actions/profileActions';\nimport '../../App.css';\nclass Edu extends Component {\n    deleteEdu(id) {\n        this.props.deleteEducation(id);\n    }\n    render() {\n        const education = this.props.edu.map(e => (\n            <tr key={e._id}>\n                <td>{e.school}</td>\n                <td>{e.degree}</td>\n                <td>{e.specialist}</td>\n                <td><Moment format=\"YYYY/MM/DD\">{e.from}</Moment> -\n                {e.to === null ? (' Now') : (<Moment format=\"YYYY/MM/DD\">{e.to}</Moment>)}\n                </td>\n                <td><button onClick={this.deleteEdu.bind(this, e._id)} className=\"btn btn-outline-danger\">Delete</button> </td>\n            </tr>\n        ));\n        return (\n            <div className=\"edu\">\n                <h4 className=\"mb-4\">Education</h4>\n                <table className=\"table over\">\n                    <thead>\n                        <tr>\n                            <td><b>School</b></td>\n                            <td><b>Degree</b></td>\n                            <td><b>Specialist</b></td>\n                            <td><b>Years</b></td>\n                            <td><b>Option</b></td>\n                        </tr>\n                        {education}\n                    </thead>\n                </table>\n            </div>\n        )\n    }\n}\n\nEdu.propTypes = {\n    deleteEducation: PropTypes.func.isRequired\n}\nexport default connect(null, { deleteEducation })(Edu);","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n//redux\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//action\nimport { getCurrentProfile, deleteAccount } from '../../actions/profileActions';\n//component\n//common-component\nimport Spinner from '../common/Spinner';\n//dashboard\nimport Profile from './Profile';\nimport Exp from './Exp';\nimport Edu from './Edu';\n\nclass Dashboard extends Component {\n  componentDidMount() { this.props.getCurrentProfile(); } //getting the current user\n  onDeleteClick = () => {\n    this.props.deleteAccount();\n  }\n  render() {\n    let { user } = this.props.auth, { profile, loading } = this.props.profile;\n    let dashboardContent;\n    if (profile === null || loading) { dashboardContent = <Spinner /> } //Show Loading using spinner\n    else {\n      if (Object.keys(profile).length > 0) //chaeck whether user have the profile\n        dashboardContent = (\n          <div>\n            <p className=\"lead text-muted\">\n              <Link className=\"text-muted\" to={`/profile/${profile.handle}`}>\n                <button className=\"btn btn-outline-primary\">{user.name}</button></Link>\n            </p>\n            <Profile />\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <Exp exp={profile.experience} />\n                </div>\n                <div className=\"col-md-6\">\n                  <Edu edu={profile.education} />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-3\" />\n            <button onClick={this.onDeleteClick} className=\"btn btn-danger\">Delete My Account</button>\n          </div>\n\n        );\n      else {\n        dashboardContent = (\n          <div>\n            <p>You have not yet created the profile, Please add some info </p>\n            <Link to=\"/create-profile\" className=\"btn btn-lg btn-outline-dark\">Create Profile</Link>\n          </div >\n        );\n      }\n    }\n\n    return (\n      <div className=\"dashboard text-center\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <p className=\"display-4\">Dashboard</p>\n            {dashboardContent}\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nDashboard.protoTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStoreToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n\n});\nexport default connect(mapStoreToProps, { getCurrentProfile, deleteAccount })(Dashboard);","import React from 'react'\n//to redirect\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Private = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (<Component {...props} />) : (<Redirect to=\"/login\" />)\n    } />\n);\n\nPrivate.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStoreToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStoreToProps)(Private);","import React from 'react'\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextArea = ({ name, placeholder, value, onChange, err, info }) => {\n    return (\n        <div>\n            <div className=\"form-group\">\n                <textarea\n                    className={classnames(\"form-control form-control-lg\",\n                        { 'is-invalid': err })}\n                    placeholder={placeholder}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                />\n                {info && (<small className=\"form-text text-muted\">{info}</small>)}\n                {err && (<div className=\"invalid-feedback\">{err}</div>)}\n            </div>\n        </div>\n    )\n}\n\nTextArea.protoTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    err: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default TextArea;","import React from 'react'\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Inputgroup = ({ name, placeholder, value, icon, type, onChange, err }) => {\n    return (\n        <div>\n            <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\"><i className={icon}></i></span>\n                </div>\n                <input\n                    type={type}\n                    className={classnames(\"form-control form-control-lg\",\n                        { 'is-invalid': err })}\n                    placeholder={placeholder}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                />\n                {err && (<div className=\"invalid-feedback\">{err}</div>)}\n            </div>\n        </div>\n    )\n}\n\nInputgroup.protoTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    icon: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    err: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\nInputgroup.defaultProps = {\n    type: 'text'\n}\nexport default Inputgroup;","import React from 'react'\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst SelectList = ({ name, value, onChange, err, info, options }) => {\n    const choice = options.map(op => (\n        <option key={op.label} value={op.value}>\n            {op.label}\n        </option>\n    ));\n    return (\n        <div>\n            <div className=\"form-group\">\n                <select\n                    className={classnames(\"form-control form-control-lg\",\n                        { 'is-invalid': err })}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                >{choice}\n                </select>\n                {info && (<small className=\"form-text text-muted\">{info}</small>)}\n                {err && (<div className=\"invalid-feedback\">{err}</div>)}\n            </div>\n        </div>\n    )\n}\n\nSelectList.protoTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    err: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n};\n\nexport default SelectList;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom';\n//component\n//Common\nimport Textfield from '../common/Textfield';\nimport Textarea from '../common/Textarea';\nimport Inputgroup from '../common/Inputgroup';\nimport SelectList from '../common/SelectList';\n//action\nimport {createProfile } from '../../actions/profileActions';\n\nclass CreateProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displaySocialInputs: false, handle: '',\n            town: '', lab: '', location: '', status: '',\n            skill: '', bio: '', github: '',\n            youtube: '', twitter: '', facebook: '', instagram: '', linkedin: '',\n            err: {}\n        }\n    };\n    componentWillReceiveProps(nextStep){\n        if(nextStep.err) this.setState({err:nextStep.err});\n    }\n\n    onChange = (e) => {this.setState({[e.target.name]:e.target.value})}\n    onSubmit = (e) => {\n        e.preventDefault();\n        let {handle,town,lab,location,status,skill,bio,github,youtube,twitter,facebook,instagram,linkedin} = this.state;\n        this.props.createProfile(\n            {handle,town,lab,location,status,skill,bio,github,youtube,twitter,facebook,instagram,linkedin},\n            this.props.history\n        );\n    }\n    render() {\n        let socialInputs;\n        let {err,displaySocialInputs} = this.state,\n         options = [\n            {label:'* Select Your Current Status',value:0},\n            {label:'Trainer',value:'Trainer'},\n            {label:'Co-ordinator',value:'Co-ordinator'},\n            {label:'Doctor',value:'Doctor'},\n            {label:'Police Officer',value:'Police Officer'},\n            {label:'Gym Leader',value:'Gym Leader'},\n            {label:'Conausour',value:'Conausour'},\n            {label:'Professor',value:'Professor'},\n            {label:'Regional Champion',value:'Regional Champion'},\n            {label:'Elite Four Member',value:'Elite Four Member'}\n        ];\n        if(displaySocialInputs){\n            socialInputs = (\n              <div>\n                <h4>Social Links</h4>\n                <Inputgroup\n                  placeholder=\"Twitter Profile URL\"\n                  name=\"twitter\"\n                  icon=\"fab fa-twitter text-primary\"\n                  value={this.state.twitter}\n                  onChange={this.onChange}\n                  err={err.twitter}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Youtube Profile URL\"\n                  name=\"youtube\"\n                  icon=\"fab fa-youtube text-danger\"\n                  value={this.state.youtube}\n                  onChange={this.onChange}\n                  err={err.youtube}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Facebook Profile URL\"\n                  name=\"facebook\"\n                  icon=\"fab fa-facebook text-info\"\n                  value={this.state.facebook}\n                  onChange={this.onChange}\n                  err={err.facebook}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Instagram Profile URL\"\n                  name=\"instagram\"\n                  icon=\"fab fa-instagram text-warning\"\n                  value={this.state.instagram}\n                  onChange={this.onChange}\n                  err={err.instagram}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Linkedin Profile URL\"\n                  name=\"linkedin\"\n                  icon=\"fab fa-linkedin text-primary\"\n                  value={this.state.linkedin}\n                  onChange={this.onChange}\n                  err={err.linkedin}\n                ></Inputgroup>\n              </div>\n            )\n        }\n        return (\n            <div className=\"create-profile\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h1 className=\"display-6 text-center\">Create Your Profile</h1>\n                        <p className=\"lead text-center\"> Create Your Wonderfull Trainer Profile</p>\n                        <form onSubmit={this.onSubmit}>\n                            <Textfield\n                                placeholder=\"* Profile Handle\"\n                                name=\"handle\"\n                                value={this.state.handle}\n                                onChange={this.onChange}\n                                err={err.handle}\n                                info=\"A unique handle for your Profile URL, Your full name,Company name,\n                                nickname\"\n                            />\n                            <SelectList\n                                name=\"status\"\n                                value={this.state.status}\n                                onChange={this.onChange}\n                                options={options}\n                                err={err.status}\n                                info=\"Your Career\"\n                            />\n                           <Textfield\n                                placeholder=\"Town\"\n                                name=\"town\"\n                                value={this.state.town}\n                                onChange={this.onChange}\n                                err={err.town}\n                                info=\"Town Name\"\n                            />\n                             <Textfield\n                                placeholder=\"lab\"\n                                name=\"lab\"\n                                value={this.state.lab}\n                                onChange={this.onChange}\n                                err={err.lab}\n                                info=\"Lab Name\"\n                            />\n                             <Textfield\n                                placeholder=\"Location of the house\"\n                                name=\"location\"\n                                value={this.state.location}\n                                onChange={this.onChange}\n                                err={err.location}\n                                info=\"Location of the House\"\n                            />\n                             <Textfield\n                                placeholder=\"* Skill\"\n                                name=\"skill\"\n                                value={this.state.skill}\n                                onChange={this.onChange}\n                                err={err.skill}\n                                info=\"Enter your Skills\"\n                            />\n                             <Textfield\n                                placeholder=\"Github Username\"\n                                name=\"github\"\n                                value={this.state.github}\n                                onChange={this.onChange}\n                                err={err.github}\n                                info=\"Game completion Count\"\n                            />\n                              <Textarea\n                                placeholder=\"Bio\"\n                                name=\"bio\"\n                                value={this.state.bio}\n                                onChange={this.onChange}\n                                err={err.bio}\n                                info=\"Bio data\"\n                            />\n\n                            <div className=\"mb-3\">\n                                <button type=\"button\" className=\"btn btn-outline-info\"\n                                onClick={()=>{\n                                    this.setState(prevState => ({\n                                        displaySocialInputs:!prevState.displaySocialInputs\n                                    }))\n                                }}>Add Social Links </button>\n                            </div>\n                            {socialInputs}\n                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-outline-success btn-block mt-4\"/>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nCreateProfile.propTypes = {\n    createProfile:PropTypes.func.isRequired,\n    err: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    err: state.err\n});\nexport default connect(mapStateToProps,{createProfile})(withRouter(CreateProfile));","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom';\n//component\n//Common\nimport Textfield from '../common/Textfield';\nimport Textarea from '../common/Textarea';\nimport Inputgroup from '../common/Inputgroup';\nimport SelectList from '../common/SelectList';\n//action\nimport {createProfile,getCurrentProfile } from '../../actions/profileActions';\n//validation\nimport isEmpty from '../../validation/isEmpty';\n\nclass EditProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displaySocialInputs: false, handle: '',\n            town: '', lab: '', location: '', status: '',\n            skill: '', bio: '', github: '',\n            youtube: '', twitter: '', facebook: '', instagram: '', linkedin: '',\n            err: {}\n        }\n    };\n    componentDidMount(){\n        this.props.getCurrentProfile();\n    }\n    componentWillReceiveProps(nextStep){\n        if(nextStep.err) this.setState({err:nextStep.err});\n        //check for the value\n        if(nextStep.profile.profile){\n            let profile = nextStep.profile.profile;\n            console.log(profile);\n            let skillCsv = profile.skill.join(','); //Joining the skill values \n            //check every field to fille the data in cv\n            profile.handle = !isEmpty(profile.handle) ? profile.handle:''; //handle\n            profile.town = !isEmpty(profile.town) ? profile.town:''; //town\n            profile.lab = !isEmpty(profile.lab) ? profile.lab:''; //lab\n            profile.location = !isEmpty(profile.location) ? profile.location:''; //location\n            profile.status = !isEmpty(profile.status) ? profile.status:''; //status\n            profile.bio = !isEmpty(profile.bio) ? profile.bio:''; //bio\n            profile.github = !isEmpty(profile.github) ? profile.github:''; //github\n            //Social Objects\n            profile.social = !isEmpty(profile.social) ? profile.social:{}; // Social Objects\n            profile.youtube = !isEmpty(profile.social.youtube) ? profile.social.youtube:''; // youtube\n            profile.twitter = !isEmpty(profile.social.twitter) ? profile.social.twitter:''; //twitter\n            profile.facebook = !isEmpty(profile.social.facebook) ? profile.social.facebook:''; //facebook\n            profile.instagram = !isEmpty(profile.social.instagram) ? profile.social.instagram:''; // instagram\n            profile.linkedin = !isEmpty(profile.social.linkedin) ? profile.social.linkedin:''; //linkedin\n            //set the component fields to state\n           this.setState({\n               handle:profile.handle,\n               town:profile.town, //town\n               lab :profile.lab, //lab\n               location :profile.location, //location\n               status :profile.status, //status\n               skill :skillCsv, //skill\n               bio :profile.bio, //bio\n               github :profile.github, //github\n               youtube :profile.youtube, // youtube\n               twitter :profile.twitter, //twitter\n               facebook :profile.facebook, //facebook\n               instagram :profile.instagram, // instagram\n               linkedin :profile.linkedin //linkedin\n           });\n        }\n    }\n\n    onChange = (e) => {this.setState({[e.target.name]:e.target.value})}\n    onSubmit = (e) => {\n        e.preventDefault();\n        let {handle,town,lab,location,status,skill,bio,github,youtube,twitter,facebook,instagram,linkedin} = this.state;\n        this.props.createProfile(\n            {handle,town,lab,location,status,skill,bio,github,youtube,twitter,facebook,instagram,linkedin},\n            this.props.history\n        );\n    }\n    render() {\n        let socialInputs;\n        let {err,displaySocialInputs} = this.state,\n         options = [\n            {label:'* Select Your Current Status',value:0},\n            {label:'Trainer',value:'Trainer'},\n            {label:'Co-ordinator',value:'Co-ordinator'},\n            {label:'Doctor',value:'Doctor'},\n            {label:'Police Officer',value:'Police Officer'},\n            {label:'Gym Leader',value:'Gym Leader'},\n            {label:'Conausour',value:'Conausour'},\n            {label:'Professor',value:'Professor'},\n            {label:'Regional Champion',value:'Regional Champion'},\n            {label:'Elite Four Member',value:'Elite Four Member'}\n        ];\n        if(displaySocialInputs){\n            socialInputs = (\n              <div>\n                <h4>Social Links</h4>\n                <Inputgroup\n                  placeholder=\"Twitter Profile URL\"\n                  name=\"twitter\"\n                  icon=\"fab fa-twitter text-primary\"\n                  value={this.state.twitter}\n                  onChange={this.onChange}\n                  err={err.twitter}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Youtube Profile URL\"\n                  name=\"youtube\"\n                  icon=\"fab fa-youtube text-danger\"\n                  value={this.state.youtube}\n                  onChange={this.onChange}\n                  err={err.youtube}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Facebook Profile URL\"\n                  name=\"facebook\"\n                  icon=\"fab fa-facebook text-info\"\n                  value={this.state.facebook}\n                  onChange={this.onChange}\n                  err={err.facebook}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Instagram Profile URL\"\n                  name=\"instagram\"\n                  icon=\"fab fa-instagram text-warning\"\n                  value={this.state.instagram}\n                  onChange={this.onChange}\n                  err={err.instagram}\n                ></Inputgroup>\n                <Inputgroup\n                  placeholder=\"Linkedin Profile URL\"\n                  name=\"linkedin\"\n                  icon=\"fab fa-linkedin text-primary\"\n                  value={this.state.linkedin}\n                  onChange={this.onChange}\n                  err={err.linkedin}\n                ></Inputgroup>\n              </div>\n            )\n        }\n        return (\n            <div className=\"create-profile\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h1 className=\"display-6 text-center\">Edit Your Profile</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <Textfield\n                                placeholder=\"* Profile Handle\"\n                                name=\"handle\"\n                                value={this.state.handle}\n                                onChange={this.onChange}\n                                err={err.handle}\n                                info=\"A unique handle for your Profile URL, Your full name,Company name,\n                                nickname\"\n                            />\n                            <SelectList\n                                name=\"status\"\n                                value={this.state.status}\n                                onChange={this.onChange}\n                                options={options}\n                                err={err.status}\n                                info=\"Your Career\"\n                            />\n                           <Textfield\n                                placeholder=\"Town\"\n                                name=\"town\"\n                                value={this.state.town}\n                                onChange={this.onChange}\n                                err={err.town}\n                                info=\"Town Name\"\n                            />\n                             <Textfield\n                                placeholder=\"lab\"\n                                name=\"lab\"\n                                value={this.state.lab}\n                                onChange={this.onChange}\n                                err={err.lab}\n                                info=\"Lab Name\"\n                            />\n                             <Textfield\n                                placeholder=\"Location of the house\"\n                                name=\"location\"\n                                value={this.state.location}\n                                onChange={this.onChange}\n                                err={err.location}\n                                info=\"Location of the House\"\n                            />\n                             <Textfield\n                                placeholder=\"* Skill\"\n                                name=\"skill\"\n                                value={this.state.skill}\n                                onChange={this.onChange}\n                                err={err.skill}\n                                info=\"Enter your Skills\"\n                            />\n                             <Textfield\n                                placeholder=\"Github Username\"\n                                name=\"github\"\n                                value={this.state.github}\n                                onChange={this.onChange}\n                                err={err.github}\n                                info=\"Github Username\"\n                            />\n                              <Textarea\n                                placeholder=\"Bio\"\n                                name=\"bio\"\n                                value={this.state.bio}\n                                onChange={this.onChange}\n                                err={err.bio}\n                                info=\"Bio data\"\n                            />\n\n                            <div className=\"mb-3\">\n                                <button type=\"button\" className=\"btn btn-outline-info\"\n                                onClick={()=>{\n                                    this.setState(prevState => ({\n                                        displaySocialInputs:!prevState.displaySocialInputs\n                                    }))\n                                }}>Add Social Links </button>\n                            </div>\n                            {socialInputs}\n                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-outline-success btn-block mt-4\"/>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nEditProfile.propTypes = {\n    createProfile:PropTypes.func.isRequired,\n    getCurrentProfile:PropTypes.func.isRequired,\n    err: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStoreToProps = state => ({\n    profile: state.profile,\n    err: state.err\n});\nexport default connect(mapStoreToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile));","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n//component\n//Common\nimport Textfield from '../common/Textfield';\nimport Textarea from '../common/Textarea';\n//actions\nimport { addExperience } from '../../actions/profileActions';\n\nclass Experience extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n            from: '',\n            to: '',\n            current: false,\n            disabled: false,\n            err: {}\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.err) { this.setState({ err: nextProps.err }) }\n    }\n    onChange = (e) => { this.setState({ [e.target.name]: e.target.value }) }\n    onSubmit = (e) => {\n        e.preventDefault();\n        let { title, description, from, to, current } = this.state;\n        this.props.addExperience({ title, description, from, to, current }, this.props.history);\n    }\n    onCheck = (e) => { this.setState({ disabled: !this.state.disabled, current: !this.state.current }) }\n\n    render() {\n        let { err } = this.state;\n        // console.log(err);\n        return (\n            <div className=\"add-experience\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4  text-center\">Add Experience</h1>\n                            <small className=\"lead text-center\">Add any Pokemon games you have played</small><br></br><br></br>\n                            <form onSubmit={this.onSubmit}>\n                                <Textfield\n                                    placeholder=\"* Title\"\n                                    name=\"title\"\n                                    value={this.state.title}\n                                    onChange={this.onChange}\n                                    err={err.title}\n                                    info=\"Title of the Game\"\n                                />\n                                <Textarea\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    placeholder=\"* Description\"\n                                    onChange={this.onChange}\n                                    info=\"Description about the game\"\n                                    err={err.description}\n                                />\n                                <h5>From</h5>\n                                <Textfield\n                                    name=\"from\"\n                                    type=\"date\"\n                                    value={this.state.from}\n                                    onChange={this.onChange}\n                                    err={err.from}\n                                />\n                                <div className=\"form-check mb-4 text-left\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"current\"\n                                        className=\"form-check-input\"\n                                        value={this.state.current}\n                                        checked={this.state.checked}\n                                        onChange={this.onCheck}\n                                        id=\"current\"\n                                    />\n                                    <label htmlFor=\"currentstate\" className=\"form-check-label\">Current playing</label>\n                                </div>\n                                <h5>To</h5>\n                                <Textfield\n                                    name=\"to\"\n                                    type=\"date\"\n                                    value={this.state.to}\n                                    onChange={this.onChange}\n                                    err={err.to}\n                                    disabled={this.state.disabled ? 'disabled' : ''}\n                                />\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-lg btn-outline-success\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nExperience.propTypes = {\n    profile: PropTypes.object.isRequired,\n    addExperience: PropTypes.func.isRequired,\n    err: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    err: state.err\n});\nexport default connect(mapStateToProps, { addExperience })(withRouter(Experience));","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n//component\n//Common\nimport Textfield from '../common/Textfield';\nimport Textarea from '../common/Textarea';\n//actions\nimport { addEducation } from '../../actions/profileActions';\n\nclass Education extends Component {\n    constructor() {\n        super();\n        this.state = {\n            school: '', description: '',\n            specialist: '', degree: '', from: '',\n            to: '', current: false, disabled: false,\n            err: {}\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.err) { this.setState({ err: nextProps.err }) }\n    }\n    onChange = (e) => { this.setState({ [e.target.name]: e.target.value }) }\n    onSubmit = (e) => {\n        e.preventDefault();\n        let { school, specialist, degree, description, from, to, current } = this.state;\n        this.props.addEducation({ school, specialist, degree, description, from, to, current }, this.props.history);\n    }\n    onCheck = (e) => { this.setState({ disabled: !this.state.disabled, current: !this.state.current }) }\n\n    render() {\n        let { err } = this.state;\n        return (\n            <div className=\"add-education\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4  text-center\">Add Education</h1>\n                            <small className=\"lead text-center\">Experience with the school</small><br></br><br></br>\n                            <form onSubmit={this.onSubmit}>\n                                <Textfield\n                                    placeholder=\"* School\"\n                                    name=\"school\"\n                                    value={this.state.school}\n                                    onChange={this.onChange}\n                                    err={err.school}\n                                    info=\"School Name\"\n                                />\n                                <Textfield\n                                    placeholder=\"*  Specialist\"\n                                    name=\"specialist\"\n                                    value={this.state.specialist}\n                                    onChange={this.onChange}\n                                    err={err.specialist}\n                                    info=\"Specialist In\"\n                                />\n                                <Textfield\n                                    placeholder=\"Degree\"\n                                    name=\"degree\"\n                                    value={this.state.degree}\n                                    onChange={this.onChange}\n                                    err={err.degree}\n                                    info=\"Degree In\"\n                                />\n                                <Textarea\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    placeholder=\"Description\"\n                                    onChange={this.onChange}\n                                    info=\"Description about the game\"\n                                    err={err.description}\n                                />\n                                <h5>* From</h5>\n                                <Textfield\n                                    name=\"from\"\n                                    type=\"date\"\n                                    value={this.state.from}\n                                    onChange={this.onChange}\n                                    err={err.from}\n                                />\n                                <div className=\"form-check mb-4 text-left\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"current\"\n                                        className=\"form-check-input\"\n                                        value={this.state.current}\n                                        checked={this.state.checked}\n                                        onChange={this.onCheck}\n                                        id=\"current\"\n                                    />\n                                    <label htmlFor=\"currentschool\" className=\"form-check-label\">Current School</label>\n                                </div>\n                                <h5>To</h5>\n                                <Textfield\n                                    name=\"to\"\n                                    type=\"date\"\n                                    value={this.state.to}\n                                    onChange={this.onChange}\n                                    err={err.to}\n                                    disabled={this.state.disabled ? 'disabled' : ''}\n                                />\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-lg btn-outline-success\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nEducation.propTypes = {\n    profile: PropTypes.object.isRequired,\n    addEducation: PropTypes.func.isRequired,\n    err: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    err: state.err\n});\nexport default connect(mapStateToProps, { addEducation })(withRouter(Education));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n//validation\nimport isEmpty from '../../validation/isEmpty';\n\nclass ProfileItem extends Component {\n    render() {\n        let { profile } = this.props;\n        return (\n            <div className=\"card card-body bg-light mb-3\">\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <img src={profile.user.avatar} alt='' className=\"rounded-circle\" />\n                    </div>\n                    <div className=\"col-lg-6 col-md-4 col-8\">\n                        <h3>{profile.user.name}</h3>\n                        <p>{profile.status}{isEmpty(profile.lab) ? null : (<span>at {profile.lab}</span>)}</p>\n                        <p>{isEmpty(profile.location) ? null : (<span>{profile.location}</span>)}</p>\n                        <Link to={`/profile/${profile.handle}`} className=\"btn btn-outline-info\">View Profile</Link>\n                    </div>\n                    <div className=\"col-md-4 d-none d-md-block\">\n                        <h4>Skill Set</h4>\n                        <ul className=\"list-group\">\n                            {profile.skill.slice(0, 4).map((s, index) => (\n                                <li key={index} className=\"list-group-item\">\n                                    <i className=\"fa fa-check pr-1\" />\n                                    {s}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nProfileItem.propTypes = {\n    profile: PropTypes.object.isRequired\n}\n\nexport default ProfileItem;","import React, { Component } from 'react'\n//redux\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//component \n//commmen\nimport Spinner from '../common/Spinner';\n//profile component\nimport ProfileItem from './ProfileItem';\n//actions\nimport { getProfiles } from '../../actions/profileActions';\n\nclass Profile extends Component {\n    componentDidMount() {\n        this.props.getProfiles();\n    }\n    render() {\n        let { profiles, loading } = this.props.profile;\n        let profileItems;\n        if (profiles == null || loading) profileItems = <Spinner />;\n        else {\n            if (profiles.length > 0) profileItems = profiles.map(p => (\n                <ProfileItem key={p._id} profile={p} />\n            ));\n            else profileItems = <h4>No Profiles Found !!!</h4>\n        }\n        return (\n            <div className=\"allProfiles\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-6 text-center\">Trainer's Profile</h1>\n                            <p className=\"text-center\">Browse and connect with the profile</p>\n                            {profileItems}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nProfile.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\nexport default connect(mapStateToProps, { getProfiles })(Profile);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//validation\nimport isEmpty from '../../validation/isEmpty';\n\nclass ProfileAbout extends Component {\n    render() {\n        let { profile } = this.props,\n            firstName = profile.user.name.trim().split(' ')[0],\n            skills = profile.skill.map((s, index) => (\n                <div key={index} className=\"p-3\"><i className=\"fa fa-check\"></i>{s}</div>\n            ));\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card card-body bg-light mb-3\">\n                            <h3 className=\"text-center text-info\">{firstName}'s Bio</h3>\n                            <p className=\"lead text-center\">{isEmpty(profile.bio) ? (<span>{firstName} does not have a bio</span>) : (<span>{profile.bio}</span>)}</p>\n                            <hr />\n                            <h3 className=\"text-center text-info\">Skill Set</h3>\n                            <div className=\"row\">\n                                <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\n                                    {skills}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n}\nexport default ProfileAbout;","import React, { Component } from 'react'\nimport Moment from 'react-moment';\nclass ProfileCredits extends Component {\n    render() {\n        let { experience, education } = this.props,\n            exp = experience.map(e => (\n                <li key={e._id} className=\"list-group-item\">\n                    <h4>{e.title}</h4>\n                    <p><Moment format=\"YYYY/MM/DD\">{e.from}</Moment> -{e.to === null ? (' Now') : (<Moment format=\"YYYY/MM/DD\">{e.to}</Moment>)}</p>\n                    {e.description === '' ? null : (<p><strong>Description:</strong>{e.description}</p>)}\n                </li>\n            )),\n            edu = education.map(e => (\n                <li key={e._id} className=\"list-group-item\">\n                    <h4>{e.school}</h4>\n                    <p><Moment format=\"YYYY/MM/DD\">{e.from}</Moment> -{e.to === null ? (' Now') : (<Moment format=\"YYYY/MM/DD\">{e.to}</Moment>)}</p>\n                    <p><strong>Specialist: </strong>  {e.specialist}</p>\n                    <p><strong>Degree:</strong>  {e.degree} </p>\n                    {e.description === '' ? null : (<p><strong>Description:</strong>  {e.description}</p>)}\n                </li>\n            ));\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h3 className=\"text-center text-info\">Experience</h3>\n                        {exp.length > 0 ? (<ul className=\"list-group\">{exp}</ul>) : (<span>No Experience Yet</span>)}\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3 className=\"text-center text-info\">Education</h3>\n                        {exp.length > 0 ? (<ul className=\"list-group\">{edu}</ul>) : (<span>No Education Yet</span>)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default ProfileCredits;","import React, { Component } from 'react'\n//validation\nimport isEmpty from '../../validation/isEmpty';\nclass ProfileHeader extends Component {\n    render() {\n        let { profile } = this.props;\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card card-body bg-dark text-white mb-3\">\n                            <div className=\"row\">\n                                <div className=\"col-4 col-md-3 m-auto\">\n                                    <img className=\"rounded-circle\" src={profile.user.avatar} alt=\"\" />\n                                </div>\n                            </div>\n                            <div className=\"text-center\">\n                                <h1 className=\"display-4 text-center\">{profile.user.name}</h1>\n                                <p className=\"lead text-center\">{profile.status}{isEmpty(profile.lab) ? null : (<span>at {profile.lab}</span>)}</p>\n                                {isEmpty(profile.location) ? null : (<p>{profile.location}</p>)}\n                                <p>\n                                    {isEmpty(profile.social && profile.social.twitter) ? null : (\n                                        <a className=\"text-white p-2\" href={profile.social.twitter}>\n                                            <i className=\"fab fa-twitter fa-2x\"></i>\n                                        </a>\n                                    )}\n                                    {isEmpty(profile.social && profile.social.facebook) ? null : (\n                                        <a className=\"text-white p-2\" href={profile.social.facebook}>\n                                            <i className=\"fab fa-facebook fa-2x\"></i>\n                                        </a>\n                                    )}\n                                    {isEmpty(profile.social && profile.social.instagram) ? null : (\n                                        <a className=\"text-white p-2\" href={profile.social.instagram}>\n                                            <i className=\"fab fa-instagram fa-2x\"></i>\n                                        </a>\n                                    )}\n                                    {isEmpty(profile.social && profile.social.youtube) ? null : (\n                                        <a className=\"text-white p-2\" href={profile.social.youtube}>\n                                            <i className=\"fab fa-youtube fa-2x\"></i>\n                                        </a>\n                                    )}\n                                    {isEmpty(profile.social && profile.social.linkedin) ? null : (\n                                        <a className=\"text-white p-2\" href={profile.social.linkedin}>\n                                            <i className=\"fab fa-linkedin fa-2x\"></i>\n                                        </a>\n                                    )}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default ProfileHeader;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ProfileInfo extends Component {\n    constructor() {\n        super();\n        this.state = {\n            clientId: '832de038d9300ee0dbe0',\n            clientSecret: '49cbc5d090c385cba3036c6c3d56b0ff0b221a06',\n            count: 5,\n            sort: 'created: asc',\n            repos: []\n        }\n    };\n    componentDidMount() {\n        let { username } = this.props;\n        let { clientId, clientSecret, count, sort } = this.state;\n        fetch(`https://api.github.com/users/${username}/repos?per_page=${count}&\n            sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`)\n            .then(res => res.json())\n            .then(data => {\n                if (this.refs.myref) { this.setState({ repos: data }); }\n            })\n            .catch(err => console.log(err));\n\n    }\n    render() {\n        let { repos } = this.state,\n            repoItem = repos.map(r => (\n                < div key={r.id} className=\"card card-body mb-2\" >\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <h4>\n                                <Link to={r.html_url} className=\"text-info\" target=\"_blank\">{r.name}</Link>\n                            </h4>\n                            <p>{r.description}</p>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <span className=\"badge badge-info mr-1\">Stars: {r.stargazers_count}</span>\n                            <span className=\"badge badge-secondary mr-1\">Watchers: {r.stargazers_count}</span>\n                            <span className=\"badge badge-success\">Forks: {r.stargazers_count}</span>\n                        </div>\n                    </div>\n                </div >\n            ));\n        return (\n            <div ref=\"myRef\">\n                <hr />\n                {/* <h3 className=\"mb-4\">Latest Github Repositories</h3> */}\n                {repoItem}\n            </div>\n        )\n    }\n}\nProfileInfo.propTypes = {\n    username: PropTypes.string.isRequired\n}\nexport default ProfileInfo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//component\n//profile components\nimport ProfileAbout from './ProfileAbout';\nimport ProfileCreds from './ProfileCreds';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileInfo from './ProfileInfo';\n//common\nimport Spinner from '../common/Spinner';\n//actions\nimport { getProfileByHandle } from '../../actions/profileActions';\n\nclass Profile extends Component {\n    componentDidMount() {\n        if (this.props.match.params.handle) {\n            this.props.getProfileByHandle(this.props.match.params.handle);\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.profile.profile === null && this.props.profile.loading) {\n            this.props.history.push('/not-found');\n        }\n    }\n    render() {\n        let { profile, loading } = this.props.profile;\n        let profileContent;\n        if (profile === null || loading) profileContent = <Spinner />\n        else {\n            profileContent = (\n                <div>\n                    <div className=\"container\">\n                        <ProfileHeader profile={profile} />\n                        <ProfileAbout profile={profile} />\n                        <ProfileCreds experience={profile.experience} education={profile.education} />\n                        {profile.github ? (<ProfileInfo username={profile.github} />) : (null)}\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"profile\">\n                <div className=\"container\">\n                    {profileContent}\n                </div>\n            </div>\n        )\n    }\n}\nProfile.propTypes = {\n    getProfileByHandle: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getProfileByHandle })(Profile);","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\">Page Not Found</h1>\n            <h3>This Page Does not Exists</h3>\n        </div>\n    )\n}\n","import axios from 'axios';\n\nimport { ADD_POST, GET_ERRORS, GET_POSTS, POST_LOADING, DELETE_POST, GET_POST, CLEAR_ERRORS } from './types';\n\n//add post \nexport const addPost = (postData) => async dispatch => {\n    try {\n        dispatch(clearErrors());\n        let newPost = await axios.post('/post', postData);\n        dispatch({ type: ADD_POST, payload: newPost.data });\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }); }\n\n}\n//addComment\nexport const addComment = (id, commentData) => async dispatch => {\n    try {\n        dispatch(clearErrors());\n        let newComment = await axios.post(`/post/comment/${id}`, commentData);\n        dispatch({ type: GET_POST, payload: newComment.data });\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }); }\n\n}\n//getallPost\nexport const getPosts = () => async dispatch => {\n    try {\n        dispatch(setPostLoading())\n        let newPost = await axios.get('/post');\n        dispatch({ type: GET_POSTS, payload: newPost.data });\n    }\n    catch (err) { dispatch({ type: GET_POSTS, payload: null }); }\n\n}\n//get post by id\nexport const getPost = (id) => async dispatch => {\n    try {\n        dispatch(setPostLoading())\n        let newPost = await axios.get(`/post/${id}`);\n        dispatch({ type: GET_POST, payload: newPost.data });\n    }\n    catch (err) { dispatch({ type: GET_POST, payload: null }); }\n\n}\n//delete post\nexport const deletePost = (deleteId) => async dispatch => {\n    try {\n        await axios.delete(`/post/${deleteId}`);\n        dispatch({ type: DELETE_POST, payload: deleteId });\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }); }\n\n}\n//deleteComment \nexport const deleteComment = (postId, commentId) => async dispatch => {\n    try {\n        let commentData = await axios.delete(`/post/comment/${postId}/${commentId}`);\n        dispatch({ type: GET_POST, payload: commentData.data });\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }); }\n\n}\n//likes\nexport const like = (id) => async dispatch => {\n    try {\n        await axios.post(`/post/like/${id}`);\n        dispatch(getPosts());\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }); }\n\n}\n//unlikes\nexport const unlike = (id) => async dispatch => {\n    try {\n        await axios.post(`/post/unlike/${id}`);\n        dispatch(getPosts());\n    }\n    catch (err) { dispatch({ type: GET_ERRORS, payload: err.response.data }); }\n\n}\n//loading\nexport const setPostLoading = () => { return { type: POST_LOADING } }\n//clear err \nexport const clearErrors = () => { return { type: CLEAR_ERRORS } }","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//Component\n//common\nimport Textarea from '../common/Textarea';\n//action\nimport { addPost } from '../../actions/postActions';\n\nclass PostForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            text: '',\n            err: {}\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.err) this.setState({ err: nextProps.err });\n    }\n    onChange = (e) => { this.setState({ [e.target.name]: e.target.value }); }\n    onSubmit = (e) => {\n        e.preventDefault();\n        let { text } = this.state, { name, avatar } = this.props.auth.user;\n        this.props.addPost({ text, name, avatar });\n        this.setState({ text: '' });\n    }\n    render() {\n        let { err } = this.state;\n        return (\n            <div className=\"post-form mb-3\">\n                <div className=\"card card-info\">\n                    <div className=\"card-header bg-dark text-white\">\n                        Say Somthing...\n              </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <Textarea placeholder=\"Create a post\" name=\"text\" value={this.state.text}\n                                    onChange={this.onChange} err={err.text} />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    err: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    err: state.err\n});\nexport default connect(mapStateToProps, { addPost })(PostForm);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\n//actions\nimport { deletePost, like, unlike } from '../../actions/postActions';\n\nclass PostItem extends Component {\n    DeleteClick(id) { this.props.deletePost(id); }\n    likePost(id) { this.props.like(id); }\n    unlikePost(id) { this.props.unlike(id); }\n    checkLikes = (likes) => {\n        let { auth } = this.props;\n        if (likes.filter(l => l.user === auth.user.id).length > 0) return true;\n        else return false;\n    }\n    render() {\n        let { auth, post, showActions } = this.props;\n        return (\n            <div className=\"card card-body mb-3\">\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <Link to=\"/profile\"><img className=\"rounded-circle d-none d-md-block\" src={post.avatar} alt=\"\" /></Link><br />\n                        <p className=\"text-center\">{post.name}</p>\n                    </div>\n                    <div className=\"col-md-10\">\n                        <p className=\"lead\">{post.text}</p>\n                        {showActions ? (\n                            <span>\n                                <button onClick={this.likePost.bind(this, post._id)} type=\"button\" className=\"btn btn-light mr-1\">\n                                    <i className={classnames('fas fa-thumbs-up', {\n                                        'text-success': this.checkLikes(post.likes)\n                                    })}></i>\n                                    <span className=\"badge badge-light\">{post.likes.length}</span>\n                                </button>\n                                <button onClick={this.unlikePost.bind(this, post._id)} type=\"button\" className=\"btn btn-light mr-1\">\n                                    <i className=\"text-secondary fas fa-thumbs-down\"></i>\n                                </button>\n                                <Link to={`/post/${post._id}`} className=\"btn btn-info mr-1\">Comments</Link>\n                                {post.user === auth.user.id ? (\n                                    <button onClick={this.DeleteClick.bind(this, post._id)} className=\"btn btn-outline-danger mr-1\">\n                                        <i className=\"fas fa-times\"></i>\n                                    </button>\n                                ) : null}\n                            </span>\n                        ) : null}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nPostItem.defaultProps = { showActions: true }\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deletePost: PropTypes.func.isRequired,\n    like: PropTypes.func.isRequired,\n    unlike: PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth,\n});\nexport default connect(mapStateToProps, { deletePost, like, unlike })(PostItem);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n//component\nimport PostItem from './PostItem';\n\nclass AllPosts extends Component {\n    render() {\n        let { posts } = this.props;\n        return (\n            <div>\n                {posts.map(p => (<PostItem key={p._id} post={p} />))}\n\n            </div>\n        )\n    }\n}\nAllPosts.propTypes = {\n    posts: PropTypes.array.isRequired\n}\nexport default AllPosts;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//component\n//post\nimport PostForm from './PostForm';\n//common\nimport Spinner from '../common/Spinner';\n//actions\nimport { getPosts } from '../../actions/postActions';\n//post\nimport AllPosts from './AllPosts';\n\nclass Posts extends Component {\n    componentDidMount() {\n        this.props.getPosts();\n    }\n    render() {\n        let { posts, loading } = this.props.post, postContent;\n        if (posts === null || loading) postContent = <Spinner />\n        else postContent = <AllPosts posts={posts} />\n\n        return (\n            <div className=\"post\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <PostForm />\n                            <h1>Your Posts</h1>\n                            {postContent}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    post: state.post\n})\nexport default connect(mapStateToProps, { getPosts })(Posts);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//Component\n//common\nimport Textarea from '../common/Textarea';\n//action\nimport { addComment } from '../../actions/postActions';\n\nclass CommentForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            text: '',\n            err: {}\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.err) this.setState({ err: nextProps.err });\n    }\n    onChange = (e) => { this.setState({ [e.target.name]: e.target.value }); }\n    onSubmit = (e) => {\n        e.preventDefault();\n        let { text } = this.state, { name, avatar } = this.props.auth.user, { postId } = this.props;\n        this.props.addComment(postId, { text, name, avatar });\n        this.setState({ text: '' });\n    }\n    render() {\n        let { err } = this.state;\n        return (\n            <div className=\"post-form mb-3\">\n                <div className=\"card card-info\">\n                    <div className=\"card-header bg-dark text-white\">Make a Comement...</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <Textarea\n                                    placeholder=\"Reply to post\"\n                                    name=\"text\"\n                                    value={this.state.text}\n                                    onChange={this.onChange}\n                                    err={err.text} />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    postId: PropTypes.string.isRequired,\n    err: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    err: state.err\n});\nexport default connect(mapStateToProps, { addComment })(CommentForm);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteComment } from '../../actions/postActions';\n\nclass CommentItem extends Component {\n    DeleteClick = (postId, commentId) => { this.props.deleteComment(postId, commentId); }\n    render() {\n        let { comment, postId, auth } = this.props;\n        return (\n            <div className=\"card card-body mb-3\">\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <a href=\"profile.html\">\n                            <img className=\"rounded-circle d-none d-md-block\" src={comment.avatar} alt=\"\" />\n                        </a>\n                        <br />\n                        <p className=\"text-center\">{comment.name}</p>\n                    </div>\n                    <div className=\"col-md-10\">\n                        <p className=\"lead\">{comment.text}</p>\n                        {comment.user === auth.user.id ? (\n                            <button onClick={this.DeleteClick.bind(this, postId, comment._id)} className=\"btn btn-outline-danger mr-1\">\n                                <i className=\"fas fa-times\"></i>\n                            </button>\n                        ) : null}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nCommentItem.propTypes = {\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n    postId: PropTypes.string.isRequired,\n    comment: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(mapStateToProps, { deleteComment })(CommentItem); \n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n//component\n//post\nimport CommentItem from './CommentItem';\n\nclass CommentFeed extends Component {\n    render() {\n        let { comments, postId } = this.props;\n        return (\n            <div>\n                {comments.map(c => <CommentItem key={c._id} comment={c} postId={postId} />)}\n            </div>\n        )\n    }\n}\n\nCommentFeed.propTypes = { comments: PropTypes.array.isRequired, postId: PropTypes.string.isRequired }\nexport default CommentFeed;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n//component\n//common\nimport Spinner from '../common/Spinner';\n//posts\nimport PostItem from '../posts/PostItem';\n//post\nimport CommentForm from './CommentForm';\nimport CommentFeed from './CommentFeed';\n\nimport { getPost } from '../../actions/postActions';\n\nclass Post extends Component {\n    componentDidMount() {\n        this.props.getPost(this.props.match.params.id);\n    }\n    render() {\n        let { loading, post } = this.props.post, postContent;\n        if (post === null || loading || Object.keys(post).length === 0) postContent = <Spinner />\n        else postContent = (<div>\n            <PostItem post={post} showActions={false} />\n            <CommentForm postId={post._id} />\n            <CommentFeed postId={post._id} comments={post.comments} />\n        </div>);\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            {postContent}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nPost.propTypes = {\n    post: PropTypes.object.isRequired,\n    getPost: PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n    post: state.post\n})\nexport default connect(mapStateToProps, { getPost })(Post);","import React, { Component } from 'react';\n//store\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport jwt_decode from 'jwt-decode';//jwt-decode fro checking the user is logged in\nimport setAuthToken from './utils/setAuthToken';//to get current user token from local storage\n//to get current user details and to redirect user to same page if he had a token when refreshing\n//actions\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport { clearCurrentProfile } from './actions/profileActions';\n//css`\nimport './App.css';\n//router\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// Component\n//layout-component\nimport Navbar from './component/layout/Navbar'; //Navbar\nimport Footer from './component/layout/Footer'; //Footer\nimport Landing from './component/layout/Landing'; //Landing\n//auth-component\nimport Login from './component/auth/Login';\nimport Register from './component/auth/Register';\n// Dashboard -Component\nimport Dashboard from './component/dashboard/Dashboard';\n//commen to get access to only private routers\nimport Private from './component/common/Private';\n//create-profile -Component\nimport CreateProfile from './component/create-profile/CreateProfile';\n//edit-profile - Component\nimport EditProfile from './component/edit-profile/EditProfile';\n//add-exp-edu\nimport Experience from './component/add-exp-edu/Experience';\nimport Education from './component/add-exp-edu/Education';\n//profiles\nimport Profiles from './component/profiles/Profile';\n//profile\nimport Profile from './component/profile/Profile';\n//notFound\nimport NotFound from './component/not-found/NotFound';\n//posts\nimport Posts from './component/posts/Posts';\n//post\nimport Post from './component/post/Post';\n\n//check for token\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);   //set Auth header with token\n  let decoded = jwt_decode(localStorage.jwtToken); //decode the token from the localstorage\n  store.dispatch(setCurrentUser(decoded));\n  //check for token expires\n  let currentTime = Date.now / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser()); // logout the user\n    store.dispatch(clearCurrentProfile());\n    window.location.href = '/login'; // redirect him to the login page\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <div className=\"container\">\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/trainers\" component={Profiles} />\n              <Route exact path=\"/profile/:handle\" component={Profile} />\n              <Switch><Private exact path=\"/dashboard\" component={Dashboard} /></Switch>\n              <Switch><Private exact path=\"/create-profile\" component={CreateProfile}></Private></Switch>\n              <Switch><Private exact path=\"/edit-profile\" component={EditProfile}></Private></Switch>\n              <Switch><Private exact path=\"/add-experience\" component={Experience}></Private></Switch>\n              <Switch><Private exact path=\"/add-education\" component={Education}></Private></Switch>\n              <Switch><Private exact path=\"/post\" component={Posts}></Private></Switch>\n              <Switch><Private exact path=\"/post/:id\" component={Post}></Private></Switch>\n              <Route exact path=\"/not-found\" component={NotFound} />\n            </div>\n            <Footer />\n          </div>\n        </Router >\n      </Provider >\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}